separate(START_DATE,into = c(month,day,year),sep="/")
# XII ----
disaster %>%
filter(!START_DATE == "" , !END_DATE == "") %>%
separate(START_DATE,into = c("month","day","year"),sep="/")
# XII ----
mnth <- disaster %>%
filter(!START_DATE == "" , !END_DATE == "") %>%
separate(START_DATE,into = c("month","day","year"),sep="/")
View(mnth)
# XII ----
mnth <- disaster %>%
filter(!START_DATE == "" , !END_DATE == "")
View(mnth)
# XII ----
mnth <- disaster %>%
filter(!START_DATE == "" , !END_DATE == "") %>%
separate(START_DATE,into = c("month","day","year"),sep="/")
# XII ----
disaster %>%
filter(!START_DATE == "" , !END_DATE == "") %>%
separate(START_DATE,into = c("MONTH","day","year"),sep="/")
# XIII ----
disaster %>%
filter(!START_DATE == "" , !END_DATE == "") %>%
separate(START_DATE,into = c("MONTH","day","year"),sep="/") %>%
summarise()
# XIII ----
disaster %>%
filter(!START_DATE == "" , !END_DATE == "") %>%
separate(START_DATE,into = c("MONTH","day","year"),sep="/") %>%
summarise(month = mode(MONTH))
# XIII ----
disaster %>%
filter(!START_DATE == "" , !END_DATE == "") %>%
separate(START_DATE,into = c("MONTH","day","year"),sep="/") %>%
group_by(MONTH)
# XIII ----
disaster %>%
filter(!START_DATE == "" , !END_DATE == "") %>%
separate(START_DATE,into = c("MONTH","day","year"),sep="/") %>%
group_by(MONTH)
# XIII ----
disaster %>%
filter(!START_DATE == "" , !END_DATE == "") %>%
separate(START_DATE,into = c("MONTH","day","year"),sep="/") %>%
group_by(MONTH) %>%
summarise(avg = mode(MONTH))
# XIII ----
disaster %>%
filter(!START_DATE == "" , !END_DATE == "") %>%
separate(START_DATE,into = c("MONTH","day","year"),sep="/") %>%
group_by(MONTH) %>%
summarise(avg = mode(year))
# XIII ----
disaster %>%
filter(!START_DATE == "" , !END_DATE == "") %>%
separate(START_DATE,into = c("MONTH","day","year"),sep="/") %>%
group_by(MONTH) %>%
summarise(avg = mode(YEAR_))
# XIII ----
disaster %>%
filter(!START_DATE == "" , !END_DATE == "") %>%
separate(START_DATE,into = c("MONTH","day","year"),sep="/") %>%
group_by(MONTH) %>%
summarise(avg = mean(YEAR_))
# XIII ----
disaster %>%
filter(!START_DATE == "" , !END_DATE == "") %>%
separate(START_DATE,into = c("MONTH","day","year"),sep="/") %>%
group_by(MONTH) %>%
summarise()
# XIII ----
disaster %>%
filter(!START_DATE == "" , !END_DATE == "") %>%
separate(START_DATE,into = c("MONTH","day","year"),sep="/") %>%
group_by(MONTH) %>%
summary()
# XII ----
disaster %>%
filter(!START_DATE == "" , !END_DATE == "") %>%
separate(START_DATE,into = c("MONTH","day","year"), sep="/", convert = TRUE)
# XIII ----
disaster %>%
filter(!START_DATE == "" , !END_DATE == "") %>%
separate(START_DATE,into = c("MONTH","day","year"), sep="/", convert = TRUE) %>%
group_by(MONTH) %>%
summary()
View(disaster)
# XIII ----
disaster %>%
filter(!START_DATE == "" , !END_DATE == "") %>%
separate(START_DATE,into = c("MONTH","day","year"), sep="/", convert = TRUE) %>%
group_by(MONTH) %>%
summarise(most_disastrous_year = mode(YEAR_))
# XII ----
disaster %>%
filter(!START_DATE == "" , !END_DATE == "") %>%
separate(START_DATE,into = c("MONTH","day","year"), sep="/", convert = TRUE)
# XIII ----
disaster %>%
filter(!START_DATE == "" , !END_DATE == "") %>%
separate(START_DATE,into = c("MONTH","day","year"), sep="/", convert = TRUE) %>%
group_by(MONTH)
# V ----
disaster %>%
group_by(ORGANIZATION)
# XIII ----
disaster %>%
filter(!START_DATE == "" , !END_DATE == "") %>%
separate(START_DATE,into = c("MONTH","day","year"), sep="/", convert = TRUE) %>%
group_by(mean_destr = mean(DESTRUCTION..in.Thousand.Dollars.), loc = mode(LOCALITY))
# XIII ----
disaster %>%
filter(!START_DATE == "" , !END_DATE == "") %>%
separate(START_DATE,into = c("MONTH","day","year"), sep="/", convert = TRUE) %>%
group_by(MONTH) %>%
summarise(mean_destr = mean(DESTRUCTION..in.Thousand.Dollars.), loc = mode(LOCALITY))
# XIII ----
disaster %>%
filter(!START_DATE == "" , !END_DATE == "") %>%
separate(START_DATE,into = c("MONTH","day","year"), sep="/", convert = TRUE) %>%
group_by(MONTH) %>%
summarise(mean_destr = mean(DESTRUCTION..in.Thousand.Dollars.))
hist(disaster)
hist(disaster$TOTAL_ACRES)
hist(disaster$YEAR_)
# XII ----
disaster %>%
filter(!START_DATE == "" , !END_DATE == "") %>%
separate(START_DATE,into = c("MONTH","day","year"), sep="/", convert = TRUE) %>%
head()
# QUESTION 2
# ALL EXTERNAL PACKAGES ----
library(dplyr)
library(tidyr)
library(ggplot2)
# I & II ----
setwd("/home/nitish/Desktop/R_stuff/DataSc/PracAsgn")
# I & II ----
setwd("/home/nitish/Desktop/R_stuff/DataSc/PracAsgn")
covid <- read.csv("Covid_dataset2020.csv", header = TRUE)
covid2 <- read.csv("Covid_dataset2020.csv", header = TRUE, na.strings = c("",NA))
covid <- read.csv("Covid_dataset2020.csv", header = TRUE)
covid2 <- read.csv("Covid_dataset2020.csv", header = TRUE, na.strings = c("",NA))
View(covid)
View(covid2)
View(covid2)
View(covid)
# I & II ----
setwd("/home/nitish/Desktop/R_stuff/DataSc/PracAsgn")
covid <- read.csv("Covid_dataset2020.csv", header = TRUE, na.strings = c("",NA))
View(covid)
View(covid)
as_tibble(covid)
disaster <- read.csv("Disaster.csv",
header = TRUE)
as_tibble(disaster)
as_tibble(covid)
View(covid)
as.data.frame(covid)
as_tibble(covid)
typeof(covid)
covid <- read.csv("Covid_dataset2020.csv", header = TRUE, na.strings = c("",NA)) %>%
as_tibble(covid)
typeof(covid)
covid %>%
select(dom_traveler) %>%
filter(dom_traveler == 0) %>%
count()
covid %>%
select(dom_traveler) %>%
filter(dom_traveler == 1) %>%
count()
covid %>%
select(dom_traveler) %>%
filter(dom_traveler == NA) %>%
count()
covid %>%
select(dom_traveler) %>%
filter(dom_traveler == "NA") %>%
count()
covid %>%
select(dom_traveler) %>%
filter(is.na(dom_traveler)) %>%
count()
364+279
covid <- covid %>% select(-dom_traveler)
covid <- read.csv("Covid_dataset2020.csv", header = TRUE, na.strings = c("",NA)) %>%
as_tibble(covid)
if(covid %>%
select(dom_traveler) %>%
filter(is.na(dom_traveler)) %>%
count() < (nrow(covid) / 2) )
covid <- read.csv("Covid_dataset2020.csv", header = TRUE, na.strings = c("",NA)) %>%
as_tibble(covid)
if(covid %>%
select(dom_traveler) %>%
filter(is.na(dom_traveler)) %>%
count() > (nrow(covid) / 2) )
covid <- read.csv("Covid_dataset2020.csv", header = TRUE, na.strings = c("",NA)) %>%
as_tibble(covid)
if(covid %>%
select(dom_traveler) %>%
filter(is.na(dom_traveler)) %>%
count() > (nrow(covid) / 2) ){
covid <- covid %>% select(-dom_traveler)
}
covid <- read.csv("Covid_dataset2020.csv", header = TRUE, na.strings = c("",NA)) %>%
as_tibble(covid)
if(covid %>%
select(dom_traveler) %>%
filter(is.na(dom_traveler)) %>%
count() < (nrow(covid) / 2) ){
covid <- covid %>% select(-dom_traveler)
}
covid <- read.csv("Covid_dataset2020.csv", header = TRUE, na.strings = c("",NA)) %>%
as_tibble(covid)
#
if(covid %>%
select(everything()) %>%
filter(is.na(everything())) %>%
count() > (nrow(covid) / 2) ){
covid <- covid %>% select(-dom_traveler)
}
x <- c("1jan1960", "2jan1960", "31mar1960", "30jul1960")
z <- as.Date(x, "%d%b%Y")
x <- c("1jan1960", "2jan1960", "31mar1960", "30jul1960")
z <- as.Date(x, "%b%d%Y")
z
z <- as.Date(x, "%d%b%Y")
z
x <- c("121960", "221960", "3121960", "3021960")
z <- as.Date(x, "%d%d%Y")
z
x <- c("1/2/1960", "2/2/1960", "31/2/1960", "30/2/1960")
z <- as.Date(x, "%d%d%Y")
z
x <- c("1/2/1960", "2/2/1960", "31/2/1960", "30/2/1960")
z <- as.Date(x, "%d/%d/%Y")
z
x <- c("1/2/1960", "2-2-1960", "31-2-1960", "30.2.1960")
z <- as.Date(x, "%d/%d/%Y"|"%d-%d-%Y"|"%d.%d.%Y")
z
x <- c("1/2/1960", "2-2-1960", "31-2-1960", "30.2.1960")
z <- as.Date(x)
z
x <- c("1/2/1960", "2-2-1960", "31-2-1960", "30.21960")
z <- as.Date(x, "%d.%d.%Y")
z
x <- c("1/2/1960", "2-2-1960", "31-2-1960", "30.21960")
z <- as.Date(x, "%d.%b.%Y")
z
library(lubridate)
x <- c("1/2/1960", "2-2-1960", "31-2-1960", "30.21960")
z <- mdy(x)
z
x <- c("1/2/1960", "2-2-1960", "31-2-1960", "30.21960")
z <- dmy(x)
z
ymd(090101, 90102)
now() > ymd(20090101)
## TRUE
dmy(010210)
mdy(010210)
x <- c("1/2/1960", "2-2-1960", "31-2-1960", "30.21.960")
z <- ymd(x)
x <- c("1/2/1960", "2-2-1960", "31-2-1960", "30.21.960")
z <- dmy(x)
z
x <- c("1/2/1960", "2-2-1960", "28-2-1960", "30.21.960")
z <- dmy(x)
x <- c("1/2/1960", "2-2-1960", "28-2-1960", "30.2.1960")
z <- dmy(x)
z
x <- c("1/2/1960", "2-2-1960", "28-2-1960", "30.3.1960")
z <- dmy(x)
z
z[1]> dmy("26/12/99")
z[1]< dmy("26/12/99")
z[1]< dmy("26/12/12")
z[1]< dmy("26/12/55")
z[1]< dmy("26/12/1955")
library(lubridate)
mdy(0)
mdy("0")
mdy("010299")
mdy(NA)
#Formatting all date columns of the format mm/dd/yyyy(total 7 columns)
covid %>%
select(reporting_date, symptom_onset, visit_date_hosp,
exposure_startdate, exposure_enddate, death, recovered) %>%
mutate_all(mdy)
View(covid)
#Formatting all date columns of the format mm/dd/yyyy(total 7 columns)
df_covid <- covid %>%
select(reporting_date, symptom_onset, visit_date_hosp,
exposure_startdate, exposure_enddate, death, recovered) %>%
mutate_all(mdy)
View(df_covid)
warning()
warnings()
#Formatting all date columns of the format mm/dd/yyyy(total 7 columns)
df_covid <- covid %>%
select(reporting_date, symptom_onset, visit_date_hosp,
exposure_startdate, exposure_enddate, death, recovered) %>%
mutate_all(mdy)
warnings()
#Formatting all date columns of the format mm/dd/yyyy(total 7 columns)
df_covid <- covid %>%
mutate_at(c(reporting_date, symptom_onset, visit_date_hosp,
exposure_startdate, exposure_enddate, death, recovered), mdy)
#Formatting all date columns of the format mm/dd/yyyy(total 7 columns)
df_covid <- covid %>%
mutate_at(vars(reporting_date, symptom_onset, visit_date_hosp,
exposure_startdate, exposure_enddate, death, recovered), mdy)
#Formatting all date columns of the format mm/dd/yyyy(total 7 columns)
df_covid <- covid %>%
mutate_at(vars(reporting_date, symptom_onset, visit_date_hosp,
exposure_startdate, exposure_enddate, death, recovered), mdy | dmy)
#Formatting all date columns of the format mm/dd/yyyy(total 7 columns) ----
df_covid <- covid %>%
mutate_at(vars(reporting_date, symptom_onset, visit_date_hosp,
exposure_startdate, exposure_enddate, death, recovered), (mdy | dmy))
#Formatting all date columns of the format mm/dd/yyyy(total 7 columns) ----
df_covid <- covid %>%
mutate_at(vars(reporting_date, symptom_onset, visit_date_hosp,
exposure_startdate, exposure_enddate, death, recovered), mdy)
View(df_covid)
#Formatting all date columns of the format mm/dd/yyyy(total 7 columns) ----
df_covid <- covid %>%
mutate_at(vars(reporting_date, symptom_onset, visit_date_hosp,
exposure_startdate, exposure_enddate, death, recovered), dmy)
#Formatting all date columns of the format mm/dd/yyyy(total 7 columns) ----
df_covid <- covid %>%
mutate_at(vars(reporting_date, symptom_onset, visit_date_hosp,
exposure_startdate, exposure_enddate, death, recovered), mdy)
df_covid <- covid %>%
mutate_at(vars(reporting_date, symptom_onset, visit_date_hosp,
exposure_startdate, exposure_enddate, death, recovered), ~(if(.<mdy(01/01/2020)){NA}))
x <- (reporting_date, symptom_onset, visit_date_hosp,
exposure_startdate, exposure_enddate, death, recovered)
x <- c(reporting_date, symptom_onset, visit_date_hosp,
exposure_startdate, exposure_enddate, death, recovered)
df_covid <- df_covid %>%
mutate_at(recovered = NA)
df_covid <- df_covid %>%
mutate_at(vars(recovered), NA)
df_covid$recovered <- NA
#Formatting all date columns of the format mm/dd/yyyy(total 7 columns) ----
covid <- covid %>%
mutate_at(vars(reporting_date, symptom_onset, visit_date_hosp,
exposure_startdate, exposure_enddate, death, recovered), mdy)
#Grouping by country to create a facet map depicting various parameters
covid2 <- covid %>%
group_by(country) %>%
select(country, case_in_country, age, gender) %>%
filter_all(any_vars(is.na(.)))
View(covid2)
#Grouping by country to create a facet map depicting various parameters
covid2 <- covid %>%
group_by(country) %>%
select(country, case_in_country, age, gender) %>%
filter_all(!any_vars(is.na(.)))
#Grouping by country to create a facet map depicting various parameters
covid2 <- covid %>%
group_by(country) %>%
select(country, case_in_country, age, gender) %>%
filter_all(any_vars(!is.na(.)))
#Grouping by country to create a facet map depicting various parameters
covid2 <- covid %>%
group_by(country) %>%
select(country, case_in_country, age, gender) %>%
filter_all(any_vars(!is.na(.))) %>%
ggplot() +
geom_point(mapping = aes(x = country, y = age)) +
facet_wrap(vars(gender))
#Grouping by country to create a facet map depicting various parameters
covid2 <- covid %>%
group_by(country) %>%
select(country, case_in_country, age, gender) %>%
filter_all(any_vars(!is.na(.))) %>%
ggplot() +
geom_point(mapping = aes(x = country, y = age)) +
facet_wrap(vars(gender))
#Grouping by country to create a facet map depicting various parameters
covid %>%
group_by(country) %>%
select(country, case_in_country, age, gender) %>%
filter_all(any_vars(!is.na(.))) %>%
ggplot() +
geom_point(mapping = aes(x = country, y = age)) +
facet_wrap(vars(gender))
#Grouping by country to create a facet map depicting various parameters
covid %>%
group_by(country) %>%
select(country, case_in_country, age, gender) %>%
filter_all(any_vars(!is.na(.))) %>%
ggplot() +
geom_point(mapping = aes(x = gender, y = age)) +
facet_wrap(vars(country))
cor(covid2$age)
cor(covid2)
covid2 %>%
summarise(correlation_age_cases = cor(age,case_in_country))
covid %>%
group_by(country) %>%
summarise(correlation_age_cases = cor(age,case_in_country))
covid %>%
group_by(country) %>%
select(country, case_in_country, age, gender) %>%
filter_all(any_vars(!is.na(.))) %>%
summarise(correlation_age_cases = cor(age,case_in_country))
covid %>%
group_by(country) %>%
select(country, case_in_country, age, gender) %>%
filter_all(any_vars(!is.na(.))) %>%
summarise(correlation_age_cases = cor(age,gender))
covid %>%
group_by(country) %>%
select(country, case_in_country, age, gender) %>%
filter_all(any_vars(!is.na(.))) %>%
summarise(correlation_age_cases = cor(age,case_in_country))
covid %>%
group_by(country) %>%
select(country, case_in_country, age, gender) %>%
filter_all(any_vars(!is.na(.))) %>%
summarise(correlation_age_cases = cor(age, case_in_country, na.rm = TRUE))
covid %>%
group_by(country) %>%
select(country, case_in_country, age, gender) %>%
filter_all(any_vars(!is.na(.))) %>%
summarise(correlation_age_cases = var(age, case_in_country, na.rm = TRUE))
library(tidyr)
# ALL EXTERNAL PACKAGES ----
library(dplyr)
library(tidyr)
library(ggplot2)
library(lubridate)
# Setting Directory and Reading csv
# Filling NA in place of blanks in the cell ----
setwd("/home/nitish/Desktop/R_stuff/DataSc/PracAsgn")
covid <- read.csv("Covid_dataset2020.csv", header = TRUE, na.strings = c("",NA)) %>%
as_tibble(covid)
#Formatting all date columns of the format mm/dd/yyyy(total 7 columns) ----
covid <- covid %>%
mutate_at(vars(reporting_date, symptom_onset, visit_date_hosp,
exposure_startdate, exposure_enddate, death, recovered), mdy)
#Grouping by country to create a facet map depicting various parameters ----
covid %>%
group_by(country) %>%
select(country, case_in_country, age, gender) %>%
filter_all(any_vars(!is.na(.))) %>%
ggplot() +
geom_point(mapping = aes(x = gender, y = age)) +
facet_wrap(vars(country))
# Variance of case_in_country with age for each country ----
covid %>%
group_by(country) %>%
select(country, case_in_country, age, gender) %>%
filter_all(any_vars(!is.na(.))) %>%
summarise(correlation_age_cases = var(age, case_in_country, na.rm = TRUE))
#Formatting all date columns of the format mm/dd/yyyy(total 7 columns) ----
write.csv(covid %>%
mutate_at(vars(reporting_date, symptom_onset, visit_date_hosp,
exposure_startdate, exposure_enddate, death, recovered), mdy),
"CleanData.csv")
#Formatting all date columns of the format mm/dd/yyyy(total 7 columns) ----
covid2 <- covid %>%
mutate_at(vars(reporting_date, symptom_onset, visit_date_hosp,
exposure_startdate, exposure_enddate, death, recovered), mdy),
write.csv(covid2,  "CleanData.csv")
#Formatting all date columns of the format mm/dd/yyyy(total 7 columns) ----
covid2 <- covid %>%
mutate_at(vars(reporting_date, symptom_onset, visit_date_hosp,
exposure_startdate, exposure_enddate, death, recovered), mdy)
write.csv(covid2,  "CleanData.csv")
# Setting Directory and Reading csv
# Filling NA in place of blanks in the cell ----
setwd("/home/nitish/Desktop/R_stuff/DataSc/PracAsgn")
summarise(correlation_age_cases = var(age, case_in_country, na.rm = TRUE))
# Setting Directory and Reading csv
# Filling NA in place of blanks in the cell ----
setwd("/home/nitish/Desktop/R_stuff/DataSc/PracAsgn")
covid <- read.csv("Covid_dataset2020.csv", header = TRUE, na.strings = c("",NA)) %>%
as_tibble(covid)
#Formatting all date columns of the format mm/dd/yyyy(total 7 columns) ----
covid2 <- covid %>%
mutate_at(vars(reporting_date, symptom_onset, visit_date_hosp,
exposure_startdate, exposure_enddate, death, recovered), mdy)
write.csv(covid2,  "CleanData.csv")
#Grouping by country to create a facet map depicting various parameters ----
covid %>%
group_by(country) %>%
select(country, case_in_country, age, gender) %>%
filter_all(any_vars(!is.na(.))) %>%
ggplot() +
geom_point(mapping = aes(x = gender, y = age)) +
facet_wrap(vars(country))
# Variance of case_in_country with age for each country ----
covid %>%
group_by(country) %>%
select(country, case_in_country, age, gender) %>%
filter_all(any_vars(!is.na(.))) %>%
summarise(correlation_age_cases = var(age, case_in_country, na.rm = TRUE))
# XVIII ----
z.test(disaster$DESTRUCTION..in.Thousand.Dollars.,sigma.x = sd(disaster$DESTRUCTION..in.Thousand.Dollars.))
library(BSDA)
install.packages("BSDA")
library(BSDA)
# XVIII ----
z.test(disaster$DESTRUCTION..in.Thousand.Dollars.,sigma.x = sd(disaster$DESTRUCTION..in.Thousand.Dollars.))
